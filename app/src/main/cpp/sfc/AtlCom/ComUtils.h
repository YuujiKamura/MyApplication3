#pragma once

namespace AppSecInc
{
	//! COM support functions
    namespace Com
    {
	    /*! 
		    \fn CLSIDFromProgID
		    \brief Looks up a CLSID in the registry, given a ProgID.
	    */
        CLSID CLSIDFromProgID(const std::wstring& progid);
	    CLSID CLSIDFromProgID(const std::string& progid);

	    /*! 
		    \fn CLSIDFromString
		    \brief Converts a std::string generated by the std::stringFromCLSID function back into the original CLSID.
	    */
	    CLSID CLSIDFromString(const std::wstring& guid);
	    CLSID CLSIDFromString(const std::string& guid);

	    /*! 
		    \fn IIDFromString
		    \brief Converts a std::string generated by the std::stringFromIID function back into the original interface identifier (IID).
	    */
	    IID IIDFromString(const std::wstring& guid);
	    IID IIDFromString(const std::string& guid);

	    /*! 
		    \fn ProgIDFromCLSID
		    \brief Converts a std::string generated by the std::stringFromCLSID function back into the original CLSID.
	    */
        std::string ProgIDFromCLSIDA(REFCLSID clsid);
        std::wstring ProgIDFromCLSIDW(REFCLSID clsid);

	    /*! 
		    \fn std::stringFromCLSID
		    \brief Converts a CLSID into a std::string of printable characters. Different CLSIDs always convert to different std::strings.
	    */
        std::string StringFromCLSIDA(REFCLSID clsid);
        std::wstring StringFromCLSIDW(REFCLSID clsid);	

	    /*! 
		    \fn std::stringFromGUID2
		    \brief Converts a globally unique identifier (GUID) into a std::string of printable characters.
	    */
        std::string StringFromGUID2A(REFGUID rguid);
        std::wstring StringFromGUID2W(REFGUID rguid);	

	    /*! 
		    \fn std::stringFromIID
		    \brief Converts an interface identifier into a std::string of printable characters.
	    */
        std::string StringFromIIDA(REFIID rclsid);
        std::wstring StringFromIIDW(REFIID rclsid);	

	    /*! 
		    \fn GetGUIDString
		    \brief Generates and converts a globally unique identifier (GUID) into a std::string of printable characters.
	    */
        std::string GenerateGUIDStringA();
        std::wstring GenerateGUIDStringW();

	    /*! 
		    \fn IsValidGUID
		    \brief Checks whether a GUID is valid.
	    */
		bool IsValidGUID(const std::wstring& guid);
		bool IsValidGUID(const std::string& guid);
    }
}
